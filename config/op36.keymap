#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        td_softhard_ru: td_softhard_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SOFTHARD_RU";
            #binding-cells = <0>;
            bindings = <&kp RU_CYRILLIC_SOFT_SIGN>, <&kp RU_CYRILLIC_HARD_SIGN>;
        };

        td_shascha_ru: td_shascha_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHASCHA_RU";
            #binding-cells = <0>;
            bindings = <&kp RU_CYRILLIC_SHA>, <&kp RU_CYRILLIC_SHCHA>;
        };

        td_ieio_ru: td_ieio_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_IEIO_RU";
            #binding-cells = <0>;
            bindings = <&kp RU_CYRILLIC_IE>, <&kp RU_CYRILLIC_IO>;
        };

        td_quotes_left: td_quotes_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LBRC>, <&kp LBKT>;
        };

        td_quotes_right: td_quotes_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RBRC>, <&kp RBKT>;
        };

        td_quotes_left_ru: td_quotes_left_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES_LEFT_RU";
            #binding-cells = <0>;
            bindings = <&en LBRC>, <&en LBKT>;
        };

        td_quotes_right_ru: td_quotes_right_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTES_RIGHT_RU";
            #binding-cells = <0>;
            bindings = <&en RBRC>, <&en RBKT>;
        };

        td_colons: td_colons {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COLONS";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMI>;
        };

        td_colons_ru: td_colons_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COLONS_RU";
            #binding-cells = <0>;
            bindings = <&en COLON>, <&en SEMI>;
        };

        td_dotcomma: td_dotcomma {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DOTCOMMA";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COMMA>;
        };

        td_dotcomma_ru: td_dotcomma_ru {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DOTCOMMA_RU";
            #binding-cells = <0>;
            bindings = <&kp RU_DOT>, <&kp RU_COMMA>;
        };
    };

    combos {
        compatible = "zmk,combos";

        to_ru {
            bindings = <&layer_ru>;
            key-positions = <10 32>;
            layers = <0>;
        };

        to_en {
            bindings = <&layer_en>;
            key-positions = <10 32>;
            layers = <1>;
        };
    };

    macros {
        change_lang: change_lang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE)>;
            label = "CHANGE_LANG";
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &change_lang>;
            label = "LAYER_RU";
            wait-ms = <10>;
            tap-ms = <1>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &change_lang>;
            label = "LAYER_EN";
            wait-ms = <10>;
            tap-ms = <1>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&change_lang>,
                <&macro_wait_time 5>,
                <&macro_param_1to1>,
                <&macro_wait_time 5>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_wait_time 5>,
                <&change_lang>;

            label = "EN";
            tap-ms = <1>;
            wait-ms = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_en {
            bindings = <
  &kp Q        &kp W        &kp E         &kp R          &kp T                          &kp Y  &kp U         &kp I         &kp O        &kp P
  &hml LGUI A  &hml LALT S  &hml LSHFT D  &hml LCTRL F   &kp G                          &kp H  &hmr RCTRL J  &hmr RSHFT K  &hmr LALT L  &kp RGUI
  &kp Z        &kp X        &kp C         &kp V          &kp B                          &kp N  &kp M         &none         &none        &none
                                          &kp BACKSPACE  &mo 2  &kp SPACE    &kp ENTER  &mo 3  &kp TAB
            >;
        };

        base_ru {
            bindings = <
  &kp RU_CYRILLIC_SHORT_I   &kp RU_CYRILLIC_TSE         &kp RU_CYRILLIC_U          &kp RU_CYRILLIC_KA        &td_ieio_ru                                 &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE       &td_shascha_ru              &kp RU_CYRILLIC_ZE        &kp RU_CYRILLIC_HA
  &hml LGUI RU_CYRILLIC_EF  &hml LALT RU_CYRILLIC_YERU  &hml LSHFT RU_CYRILLIC_VE  &hml LCTRL RU_CYRILLIC_A  &kp RU_CYRILLIC_PE                          &kp RU_CYRILLIC_ER  &hml RCTRL RU_CYRILLIC_O  &hml RSHIFT RU_CYRILLIC_EL  &hml LALT RU_CYRILLIC_DE  &hml RGUI RU_CYRILLIC_ZHE
  &kp RU_CYRILLIC_YA        &kp RU_CYRILLIC_CHE         &kp RU_CYRILLIC_ES         &kp RU_CYRILLIC_EM        &kp RU_CYRILLIC_I                           &kp RU_CYRILLIC_TE  &td_softhard_ru           &kp RU_CYRILLIC_BE          &kp RU_CYRILLIC_YU        &kp RU_CYRILLIC_E
                                                                                   &kp BACKSPACE             &mo 2               &kp SPACE    &kp ENTER  &mo 4               &kp TAB
            >;
        };

        nav {
            bindings = <
  &kp N1         &kp N2    &kp N3    &kp N4   &kp N5                             &kp N6           &kp N7          &kp N8          &kp N9        &kp N0
  &hml LGUI ESC  &kp LEFT  &kp DOWN  &kp UP   &kp RIGHT_ARROW                    &kp PRINTSCREEN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT
  &msc SCRL_UP   &kp HOME  &kp INS   &kp END  &mkp LCLK                          &mkp RCLK        &kp CAPS        &kp PG_DN       &kp PG_UP     &msc SCRL_DOWN
                                     &trans   &trans           &trans    &trans  &mo 5            &trans
            >;
        };

        sym_eng {
            bindings = <
  &none     &kp LT    &kp EQUAL      &kp GT    &kp GRAVE                    &kp CARET     &td_quotes_left  &kp UNDER   &td_quotes_right  &none
  &kp BSLH  &kp LPAR  &kp MINUS      &kp RPAR  &kp PLUS                     &kp PRCNT     &kp SQT          &td_colons  &kp DQT           &kp EXCL
  &kp HASH  &kp STAR  &en RU_NUMERO  &kp FSLH  &kp AT                       &td_dotcomma  &kp PIPE         &kp TILDE   &kp AMPS          &kp DLLR
                                     &trans    &mo 5      &trans    &trans  &trans        &trans
            >;
        };

        sym_ru {
            bindings = <
  &none     &en LT    &kp EQUAL      &en GT    &en GRAVE                    &en CARET        &td_quotes_left_ru  &kp UNDER      &td_quotes_right_ru  &none
  &kp BSLH  &kp LPAR  &kp MINUS      &kp RPAR  &kp PLUS                     &kp PRCNT        &en SQT             &td_colons_ru  &en DQT              &kp EXCL
  &en HASH  &kp STAR  &kp RU_NUMERO  &en FSLH  &en AT                       &td_dotcomma_ru  &en PIPE            &en TILDE      &en AMPS             &en DLLR
                                     &trans    &mo 5      &trans    &trans  &trans           &trans
            >;
        };

        adj {
            bindings = <
  &bootloader  &kp F1  &kp F2   &kp F3   &kp F4                     &bt BT_SEL 0  &bt BT_SEL 1         &bt BT_SEL 2       &bt BT_SEL 3        &bt BT_CLR
  &kp LGUI     &kp F5  &kp F6   &kp F7   &kp F8                     &out OUT_BLE  &hmr RCTRL C_VOL_DN  &hmr RSHFT C_MUTE  &hmr LALT C_VOL_UP  &kp RGUI
  &none        &kp F9  &kp F10  &kp F11  &kp F12                    &out OUT_USB  &kp C_PREV           &kp C_PP           &kp C_NEXT          &studio_unlock
                                &trans   &trans   &trans    &trans  &trans        &trans
            >;
        };
    };
};
